// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDo.DataAccess;

namespace ToDo.DataAccess.Migrations
{
    [DbContext(typeof(ToDoDbContex))]
    [Migration("20190704181653_init2")]
    partial class init2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ToDo.Domain.Models.SubTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<bool>("Status");

                    b.Property<int>("TaskId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.ToTable("SubTasks");

                    b.HasData(
                        new { Id = 1, Description = "1h Nap", Status = false, TaskId = 1, Title = "Nap" },
                        new { Id = 2, Description = "Watching Basketball", Status = true, TaskId = 3, Title = "TV" },
                        new { Id = 3, Description = "Playing Fortnite", Status = false, TaskId = 2, Title = "PC" },
                        new { Id = 4, Description = "Playing DOTA", Status = false, TaskId = 4, Title = "PC" },
                        new { Id = 5, Description = "Listening Music", Status = false, TaskId = 5, Title = "Youtiube" }
                    );
                });

            modelBuilder.Entity("ToDo.Domain.Models.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripton");

                    b.Property<int>("Importance");

                    b.Property<int>("Status");

                    b.Property<string>("Title");

                    b.Property<int>("Type");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new { Id = 1, Descripton = "Chest day", Importance = 2, Status = 0, Title = "Gym", Type = 2, UserId = 1 },
                        new { Id = 2, Descripton = "Kopanje", Importance = 2, Status = 2, Title = "Lozje Day", Type = 1, UserId = 2 },
                        new { Id = 3, Descripton = "Doing Homework", Importance = 1, Status = 1, Title = "SEDC Homework", Type = 1, UserId = 1 },
                        new { Id = 4, Descripton = "Leg day", Importance = 1, Status = 2, Title = "Gym", Type = 2, UserId = 1 },
                        new { Id = 5, Descripton = "Programing", Importance = 1, Status = 2, Title = "C#", Type = 1, UserId = 2 },
                        new { Id = 6, Descripton = "C# Homework", Importance = 1, Status = 1, Title = "SEDC Homework", Type = 1, UserId = 2 },
                        new { Id = 7, Descripton = "Day for resting", Importance = 3, Status = 0, Title = "Resting", Type = 1, UserId = 1 },
                        new { Id = 8, Descripton = "Working out", Importance = 2, Status = 0, Title = "Crossfit", Type = 2, UserId = 1 },
                        new { Id = 9, Descripton = "Going on class", Importance = 1, Status = 1, Title = "SEDC", Type = 1, UserId = 2 }
                    );
                });

            modelBuilder.Entity("ToDo.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<double>("AverageFreeTime");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = 1, Age = 99, AverageFreeTime = 9.0, FirstName = "John", LastName = "Doe" },
                        new { Id = 2, Age = 99, AverageFreeTime = 9.0, FirstName = "Jane", LastName = "Doe" }
                    );
                });

            modelBuilder.Entity("ToDo.Domain.Models.SubTask", b =>
                {
                    b.HasOne("ToDo.Domain.Models.Task", "Task")
                        .WithMany("SubTasks")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ToDo.Domain.Models.Task", b =>
                {
                    b.HasOne("ToDo.Domain.Models.User", "User")
                        .WithMany("ToDoTasks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
